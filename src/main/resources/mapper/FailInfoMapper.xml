<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linktai.dao.FailInfoMapper">
	<resultMap id="BaseResultMap" type="com.linktai.pojo.FailInfo">
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="country" jdbcType="VARCHAR" property="country" />
		<result column="company" jdbcType="VARCHAR" property="company" />
		<result column="position" jdbcType="VARCHAR" property="position" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="telephine" jdbcType="VARCHAR" property="telephine" />
		<result column="cardNumber4" jdbcType="VARCHAR" property="cardnumber4" />
		<result column="failMessage" jdbcType="VARCHAR" property="failmessage" />
		<result column="failtime" jdbcType="TIMESTAMP" property="failtime" />
		<result column="failure_code" jdbcType="VARCHAR" property="failure_code" />
		<result column="failnum" property="failnum"/>
		<result column="ishandle" property="ishandle"/>
		<result column="isPayCoin" property="isPayCoin"/>
		<result column="txhash" property="txhash"/>
	</resultMap>
	<insert id="insert" parameterType="com.linktai.pojo.FailInfo">
		insert into failInfo ( name, country,
		company, position, email,
		telephine, cardNumber4, failMessage,
		failtime,failure_code,lang)
		values ( #{name,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR},
		#{company,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{telephine,jdbcType=VARCHAR}, #{cardnumber4,jdbcType=VARCHAR}, #{failmessage,jdbcType=VARCHAR},
		#{failtime,jdbcType=TIMESTAMP},#{failure_code,jdbcType=VARCHAR},#{lang,jdbcType=VARCHAR})
	</insert>
	<select id="findFailInfo" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		SELECT
		id,name,country,company,position,email,telephine,cardNumber4,failMessage,failtime,failure_code,ishandle,isPayCoin,txhash,count(id) failnum
		FROM failInfo
		<if test="failCode!=null">
			WHERE failure_code=#{failCode}
		</if>
		 GROUP BY name,failure_code ORDER BY failtime DESC
		 LIMIT #{start},#{ps};
	</select>

	<select id="findAllCount" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT count(DISTINCT name,failure_code) FROM failInfo
		<if test="_parameter!=null">
			WHERE failure_code=#{_parameter};
		</if>
	</select>
	<select id="findCountNotRead" resultType="java.lang.Integer">
		SELECT count(id) FROM failInfo WHERE isread=0;
	</select>
	
	<update id="updateIsReadState">
		UPDATE failInfo SET isread=1 WHERE isread=0;
	</update>
	
	<select id="findFailByID" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT id,name,country,company,position,email,telephine,lang,isPayCoin,txhash FROM failInfo WHERE id=#{id};
	</select>
	
	<update id="updateStateOfHandle" parameterType="java.util.Map">
		UPDATE failInfo SET ishandle=1 WHERE name=#{name} AND email=#{email};
	</update>
	
	<update id="updateTxHashAndIsPayCoin" parameterType="java.util.Map">
		UPDATE failInfo SET txhash=#{txhash},isPayCoin="1" WHERE name=#{name} AND email=#{email};
	</update>
</mapper>